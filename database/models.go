// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package database

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Feed struct {
	ID        uuid.UUID    `json:"id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
	Url       string       `json:"url"`
}

type ForgotPassword struct {
	CaseNumber uuid.UUID `json:"case_number"`
	Code       string    `json:"code"`
	UserID     int32     `json:"user_id"`
}

type Post struct {
	PostID      uuid.UUID      `json:"post_id"`
	Title       string         `json:"title"`
	Description sql.NullString `json:"description"`
	Author      sql.NullString `json:"author"`
	PubDate     time.Time      `json:"pub_date"`
	PostImage   sql.NullString `json:"post_image"`
	Url         string         `json:"url"`
	FetchedAt   time.Time      `json:"fetched_at"`
	FeedID      uuid.UUID      `json:"feed_id"`
}

type Topic struct {
	ID        uuid.UUID      `json:"id"`
	Name      string         `json:"name"`
	ImgUrl    sql.NullString `json:"img_url"`
	UpdatedAt time.Time      `json:"updated_at"`
	CreatedBy int32          `json:"created_by"`
}

type TopicContainsFeed struct {
	TopicID uuid.UUID `json:"topic_id"`
	FeedID  uuid.UUID `json:"feed_id"`
	UserID  int32     `json:"user_id"`
}

type User struct {
	ID        int32     `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Password  string    `json:"password"`
	ApiKey    string    `json:"api_key"`
}

type UserFollowsTopic struct {
	UserID  int32     `json:"user_id"`
	TopicID uuid.UUID `json:"topic_id"`
}
