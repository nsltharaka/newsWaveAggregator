// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: forgot_password.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createPasswordResetCase = `-- name: CreatePasswordResetCase :one
INSERT INTO
    forgot_password (case_number, opened, user_id)
VALUES ($1, $2, $3) RETURNING case_number, opened, user_id
`

type CreatePasswordResetCaseParams struct {
	CaseNumber uuid.UUID `json:"case_number"`
	Opened     bool      `json:"opened"`
	UserID     int32     `json:"user_id"`
}

func (q *Queries) CreatePasswordResetCase(ctx context.Context, arg CreatePasswordResetCaseParams) (ForgotPassword, error) {
	row := q.db.QueryRowContext(ctx, createPasswordResetCase, arg.CaseNumber, arg.Opened, arg.UserID)
	var i ForgotPassword
	err := row.Scan(&i.CaseNumber, &i.Opened, &i.UserID)
	return i, err
}

const getCaseForUser = `-- name: GetCaseForUser :one
SELECT case_number, opened, user_id FROM forgot_password WHERE user_id = $1
`

func (q *Queries) GetCaseForUser(ctx context.Context, userID int32) (ForgotPassword, error) {
	row := q.db.QueryRowContext(ctx, getCaseForUser, userID)
	var i ForgotPassword
	err := row.Scan(&i.CaseNumber, &i.Opened, &i.UserID)
	return i, err
}
